name: Check IPTV Links

on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次（UTC时间）

permissions:
  contents: write  # ✅ 允许写入仓库

jobs:
  check-iptv:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up Git config
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: 📥 Download IPTV lists
        run: |
          curl -sL https://raw.githubusercontent.com/tangdeyi11/udpxy-text/main/iptv.txt -o iptv.txt
          curl -sL https://raw.githubusercontent.com/tangdeyi11/udpxy-text/main/iptvdl.txt -o iptvdl.txt

      - name: 📡 Test IPTV links
        run: |
          echo "🔍 Testing links from iptv.txt..." > iptv-test.txt
          while read -r url; do
            if [[ ! "$url" =~ ^#.* ]] && [[ -n "$url" ]]; then
              echo "Testing $url..."
              status="⏳ $url - 测试中..."
              if timeout 10s curl -s --max-time 12 --speed-time 5 --speed-limit 1024 "$url" -o /dev/null; then
                status="✅ $url - 可用（10秒内持续下载）"
              else
                CODE=$?
                if [ $CODE -eq 124 ]; then
                  status="⚠️ $url - 有拦截（10秒内下载结束）"
                else
                  status="❌ $url - 无法访问（连接失败）"
                fi
              fi
              echo "$status" >> iptv-test.txt
            fi
          done < iptv.txt

      - name: 📡 Test IPTVDL links
        run: |
          echo "🔍 Testing links from iptvdl.txt..." > iptvdl-test.txt
          while read -r url; do
            if [[ ! "$url" =~ ^#.* ]] && [[ -n "$url" ]]; then
              echo "Testing $url..."
              status="⏳ $url - 测试中..."
              if timeout 10s curl -s --max-time 12 --speed-time 5 --speed-limit 1024 "$url" -o /dev/null; then
                status="✅ $url - 可用（10秒内持续下载）"
              else
                CODE=$?
                if [ $CODE -eq 124 ]; then
                  status="⚠️ $url - 有拦截（10秒内下载结束）"
                else
                  status="❌ $url - 无法访问（连接失败）"
                fi
              fi
              echo "$status" >> iptvdl-test.txt
            fi
          done < iptvdl.txt

      - name: 📤 Commit and push results
        run: |
          git add --force iptv-test.txt iptvdl-test.txt
          git commit -m "📡 自动更新 IPTV 测试结果 $(date -u '+%Y-%m-%d %H:%M:%S')" || echo "Nothing to commit"
          git pull --rebase
          git push
