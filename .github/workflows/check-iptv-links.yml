name: 自动更新 IPTV 测试结果

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时执行一次（UTC 时间）
  workflow_dispatch:        # 支持手动触发

permissions:
  contents: write  # ✅ 允许 GitHub Actions 向代码仓库写入内容

jobs:
  update-iptv:
    runs-on: ubuntu-latest

    steps:
      # Checkout 仓库
      - name: Checkout code
        uses: actions/checkout@v2

      # 设置 Git 用户信息
      - name: Set Git identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      # 拉取远程分支的更新并解决可能的冲突
      - name: Pull the latest changes from remote
        run: |
          git pull origin main --rebase

      # 测试 IPTV 链接并生成测试报告
      - name: Test IPTV links
        run: |
          echo "🔍 Testing links from iptv.txt..." > iptv-test.txt
          while read -r url; do
            if [[ ! "$url" =~ ^#.* ]]; then
              echo "Testing $url..."
              status="⏳ $url - 测试中..."
              timeout 10s curl -s --max-time 12 --speed-time 5 --speed-limit 1024 "$url" -o /dev/null
              CODE=$?
              if [ $CODE -eq 0 ]; then
                status="✅ $url - 可用（10秒内持续下载）"
              elif [ $CODE -eq 124 ]; then
                status="⚠️ $url - 有拦截（10秒内下载结束）"
              else
                status="❌ $url - 无法访问（连接失败）"
              fi
              echo "$status" >> iptv-test.txt
            fi
          done < iptv.txt

          echo "🔍 Testing links from iptvdl.txt..." > iptvdl-test.txt
          while read -r url; do
            if [[ ! "$url" =~ ^#.* ]]; then
              echo "Testing $url..."
              status="⏳ $url - 测试中..."
              timeout 10s curl -s --max-time 12 --speed-time 5 --speed-limit 1024 "$url" -o /dev/null
              CODE=$?
              if [ $CODE -eq 0 ]; then
                status="✅ $url - 可用（10秒内持续下载）"
              elif [ $CODE -eq 124 ]; then
                status="⚠️ $url - 有拦截（10秒内下载结束）"
              else
                status="❌ $url - 无法访问（连接失败）"
              fi
              echo "$status" >> iptvdl-test.txt
            fi
          done < iptvdl.txt

      # 提交更改并推送
      - name: Commit and push results
        run: |
          git add --force iptv-test.txt iptvdl-test.txt
          timestamp=$(date -u +"%Y-%m-%d %H:%M:%S")
          git commit -m "📡 自动更新 IPTV 测试结果 on ${timestamp}" || echo "No changes to commit"
          git push origin main
