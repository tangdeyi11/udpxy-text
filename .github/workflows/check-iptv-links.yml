name: 📡 检测 IPTV 可用性

on:
  schedule:
    - cron: '0 2 * * *'  # 每天 10:00（北京时间）运行
  workflow_dispatch:     # 支持手动运行

permissions:
  contents: write        # ✅ 允许 GitHub Actions 推送更改

jobs:
  check-iptv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run IPTV availability check
        run: |
          test_links() {
            input_file="$1"
            output_file="$2"

            echo "🔍 Testing links from $input_file..." > "$output_file"

            while read -r url; do
              if [[ -z "$url" || "$url" =~ ^# ]]; then
                continue
              fi

              echo "Testing $url..."
              start_time=$(date +%s)

              curl -s --max-time 15 --speed-time 5 --speed-limit 1024 "$url" -o /dev/null
              curl_code=$?
              end_time=$(date +%s)
              elapsed=$(( end_time - start_time ))

              if [[ $curl_code -eq 0 ]]; then
                if [[ $elapsed -lt 10 ]]; then
                  echo "⚠️ $url - 有拦截（${elapsed}秒内下载结束）" >> "$output_file"
                else
                  echo "✅ $url - 可用（持续下载${elapsed}秒）" >> "$output_file"
                fi
              else
                echo "❌ $url - 无法访问（curl 错误码 $curl_code）" >> "$output_file"
              fi

            done < "$input_file"
          }

          # 执行检测
          test_links "iptv.txt" "iptv-test.txt"
          test_links "iptvdl.txt" "iptvdl-test.txt"

      - name: Commit and push results
        run: |
          git add iptv-test.txt iptvdl-test.txt
          git commit -m "📡 自动更新 IPTV 测试结果 $(date -u +'%Y-%m-%d %H:%M:%S')" || echo "✅ No changes to commit"
          git push
